{"version":3,"sources":["Header.js","Item.js","ListItems.js","Table.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","sum","items","map","item","price","value","className","type","name","onChange","handleNameChange","onClick","handleStartTime","disabled","id","min","max","startTime","handleStopTime","stopTime","timeSpent","Item","handleValue","ListItems","key","Table","state","minutesSpent","e","setState","target","option","d","Date","hour","getHours","minute","getMinutes","deltaHour","split","deltaMinute","totalMinutes","hoursSpent","console","log","this","Component","App","total","resetTotal","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9963111b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = props => {\r\n  let sum = 0;\r\n  let items = props.items;\r\n  items.map(item => (sum += item.price * item.value));\r\n  return (\r\n    <header>\r\n      <div className=\"total\">\r\n        <div>\r\n          SUMA: <strong>{sum}</strong> PLN\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          value={props.name}\r\n          onChange={props.handleNameChange}\r\n        />\r\n      </div>\r\n      <div className=\"hours\">\r\n        <div>\r\n          <button onClick={props.handleStartTime}>start</button>\r\n          <input\r\n            type=\"time\"\r\n            disabled={true}\r\n            id=\"appt\"\r\n            name=\"appt\"\r\n            min=\"10:00\"\r\n            max=\"19:00\"\r\n            value={props.startTime}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button onClick={props.handleStopTime}>stop</button>\r\n          <input\r\n            type=\"time\"\r\n            disabled={true}\r\n            id=\"appt\"\r\n            name=\"appt\"\r\n            min=\"10:00\"\r\n            max=\"19:00\"\r\n            value={props.stopTime}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            <small>Czas w Giligili </small>\r\n            <input\r\n              type=\"time\"\r\n              disabled={true}\r\n              id=\"appt\"\r\n              name=\"appt\"\r\n              min=\"10:00\"\r\n              max=\"19:00\"\r\n              value={props.timeSpent}\r\n            />\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Item = props => {\r\n  let item = props.item;\r\n  return (\r\n    <li>\r\n      {item.name} {item.price} PLN\r\n      <div className=\"value\">\r\n        <button\r\n          disabled={item.value === 0 ? true : false}\r\n          onClick={() => props.handleValue(item.name, \"minus\")}\r\n        >\r\n          -\r\n        </button>\r\n        {item.value}\r\n        <button onClick={() => props.handleValue(item.name, \"plus\")}>+</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Item from \"./Item\";\r\n\r\nconst ListItems = props => {\r\n  let items = props.items.map(item => (\r\n    <Item key={item.id} item={item} handleValue={props.handleValue} />\r\n  ));\r\n  return <ul>{items}</ul>;\r\n};\r\n\r\nexport default ListItems;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport ListItems from \"./ListItems\";\r\n\r\nclass Table extends Component {\r\n  state = {\r\n    items: [\r\n      { id: 1, name: \"pierwsza godzina\", price: 18, value: 0 },\r\n      { id: 2, name: \"kolejna godzina\", price: 12, value: 0 },\r\n      { id: 3, name: \"bez limitu\", price: 35, value: 0 },\r\n      { id: 4, name: \"rodzenstwo pierwsza godzina\", price: 15, value: 0 },\r\n      { id: 5, name: \"rodzenstwo kolejna godzina\", price: 12, value: 0 },\r\n      { id: 6, name: \"rodzenstwo bez limitu\", price: 30, value: 0 },\r\n      { id: 7, name: \"espresso\", price: 6, value: 0 },\r\n      { id: 8, name: \"podwojne espresso\", price: 7, value: 0 },\r\n      { id: 9, name: \"czarna\", price: 10, value: 0 },\r\n      { id: 10, name: \"flat white\", price: 11, value: 0 },\r\n      { id: 11, name: \"cappucino\", price: 11, value: 0 },\r\n      { id: 12, name: \"latte\", price: 12, value: 0 },\r\n      { id: 13, name: \"herbata\", price: 12, value: 0 },\r\n      { id: 14, name: \"lemoniada\", price: 8, value: 0 },\r\n      { id: 15, name: \"smoothie\", price: 8, value: 0 },\r\n      { id: 16, name: \"sok\", price: 7, value: 0 },\r\n      { id: 17, name: \"jagoda\", price: 13, value: 0 },\r\n      { id: 18, name: \"ciasto13\", price: 13, value: 0 },\r\n      { id: 19, name: \"ciasto12\", price: 12, value: 0 },\r\n      { id: 20, name: \"ciasto9\", price: 9, value: 0 },\r\n      { id: 21, name: \"ciasto8\", price: 8, value: 0 }\r\n    ],\r\n    name: \"\",\r\n    startTime: \"15:10\",\r\n    stopTime: \"\",\r\n    timeSpent: \"\",\r\n    minutesSpent: \"\"\r\n  };\r\n\r\n  handleNameChange = e => {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  };\r\n\r\n  handleValue = (name, option) => {\r\n    const items = this.state.items.map(item => {\r\n      if (name === item.name) {\r\n        if (option === \"plus\") {\r\n          item.value++;\r\n        }\r\n        if (option === \"minus\") {\r\n          item.value--;\r\n        }\r\n      }\r\n      return item;\r\n    });\r\n    this.setState({ items: items });\r\n  };\r\n\r\n  handleStartTime = e => {\r\n    const d = new Date();\r\n    const hour = d.getHours();\r\n    const minute = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes();\r\n\r\n    this.setState({\r\n      startTime: hour + \":\" + minute\r\n    });\r\n  };\r\n\r\n  handleStopTime = e => {\r\n    const d = new Date();\r\n    const hour = d.getHours();\r\n    const minute = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes();\r\n\r\n    let startHour = this.state.startTime.split(\":\")[0];\r\n\r\n    let deltaHour = hour * 60 - startHour * 60;\r\n    let deltaMinute = minute - this.state.startTime.split(\":\")[1];\r\n    let totalMinutes = deltaHour + deltaMinute;\r\n\r\n    let minutesSpent = totalMinutes % 60;\r\n    let hoursSpent = (totalMinutes - minutesSpent) / 60;\r\n\r\n    console.log(deltaHour + deltaMinute);\r\n\r\n    this.setState({\r\n      stopTime: hour + \":\" + minute,\r\n      timeSpent: \"0\" + hoursSpent + \":\" + minutesSpent,\r\n      minutesSpent: minutesSpent\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <Header\r\n          items={this.state.items}\r\n          name={this.state.name}\r\n          startTime={this.state.startTime}\r\n          stopTime={this.state.stopTime}\r\n          timeSpent={this.state.timeSpent}\r\n          handleNameChange={this.handleNameChange}\r\n          handleStartTime={this.handleStartTime}\r\n          handleStopTime={this.handleStopTime}\r\n        />\r\n        <ListItems items={this.state.items} handleValue={this.handleValue} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { total: 10 };\n\n  resetTotal = () => {\n    this.setState({\n      total: 0\n    });\n  };\n  render() {\n    return (\n      <>\n        <h1 className=\"sum\">\n          Suma: {this.state.total}{\" \"}\n          <button onClick={this.resetTotal}>reset</button>\n        </h1>\n        <Table total={this.state.total} />\n        <Table total={this.state.total} />\n        <Table total={this.state.total} />\n        <Table total={this.state.total} />\n        <Table total={this.state.total} />\n        <Table total={this.state.total} />\n        <Table total={this.state.total} />\n        <Table total={this.state.total} />\n        <Table total={this.state.total} />\n        <Table total={this.state.total} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}